set nocompatible
set encoding=utf-8

set rtp+=/usr/local/opt/fzf

call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'ervandew/supertab'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/seoul256.vim'
Plug 'rhysd/vim-llvm'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/a.vim'

call plug#end()

"Set plugin options.
noremap  <F10> :NERDTreeToggle<CR>
inoremap <F10> <ESC>:NERDTreeToggle<CR>
let NERDTreeIgnore=['\~$', '.*\.pyc$', 'pip-log\.txt$', '.*.pid', '.*\.o$']

" [Buffers] Jump to the existing window if possible
let g:fzf_buffers_jump = 1

" [[B]Commits] Customize the options used by 'git log':
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'

"Complete file paths
imap <c-p> <plug>(fzf-complete-file)

" Set when *.h files are meant to be C.
" let g:c_syntax_for_h = 1

let delimitMate_expand_cr = 1
let g:alternateSearchPath = 'reg:|source|include/lldb|g,reg:|include/lldb|source|g,reg:|include/swift|lib|g,reg:|lib|include/swift|g,reg:|include/clang|lib|g,reg:|lib|include/clang|g,reg:|include/llvm|lib|g,reg:|lib|include/llvm|g'
let g:swift_suppress_showmatch_warning = 1

"Basic options.
set wrap "Enable line wrapping.
set magic "Use the default mode for regexes.
set number "Display line numbers.
set hlsearch "Highlight search results.
set incsearch "Use incremental (Firefox-style) searching.
set ignorecase "Ignore case in searches.
set smartcase "Interpret case in searches intelligently.
set showmatch "Quickly highlight matching brackets when inserted.
set autoindent "Enable automatic indentation.
set copyindent "Use the same indentation convention as the last line.
set showcmd "Show partial commands at the bottom of the screen.
set noerrorbells "Disable annoying screen flashes.
set showmode "Display the current mode.
set ruler "Display the current line and column number.
set hidden "Hide buffers instead of closing them.
set splitbelow "Open new buffers beneath the current one. (:split)
set splitright "Open new buffers to the right of the current one. (:vsplit)

"Sundry settings.
set modelines=0 "Disable modelines.
set scrolloff=5 "View lines past the scroll target.
set history=100 "Remember past commands.
set undolevels=100 "We all make mistakes sometimes.
set pastetoggle=<F2> "Jump into raw input mode.
set wildmode=list:longest "Preferred completion mode.
set wildignore=*.swp,*.pyc,*.class,*.o,*.so,*.rar,*.tar,*.a,*.out,*.dSYM,*.DS_Store  "Ignore these files.
set backspace=indent,eol,start "Sane backspacing.
set tabpagemax=10000
set laststatus=2

" Do not scan includes for completions.
set complete-=i

"Maintaining appearances.
syntax on
let g:lisp_rainbow = 1

set background=dark
colorscheme seoul256

"Set language-specific indentation preferences.
set shiftround
filetype plugin indent on
augroup filetype
	au! BufRead,BufNewFile *.ll set filetype=llvm
	au! BufRead,BufNewFile *.td set filetype=tablegen
	au! BufRead,BufNewFile *.rs set filetype=rust
	au! BufRead,BufNewFile *.tex set filetype=tex
	au! BufRead,BufNewFile *.txt set filetype=text
	au! BufRead,BufNewFile *.inc set filetype=text
	au! BufRead,BufNewFile *.m set filetype=objc
augroup END

autocmd FileType llvm setlocal colorcolumn=80
autocmd FileType text setlocal textwidth=80 colorcolumn=80
"autocmd FileType c setlocal cindent tabstop=8 colorcolumn=80 tabstop=8 softtabstop=8 autoindent noexpandtab shiftwidth=8
autocmd FileType c setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType cpp setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType objc setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType cmake setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType text setlocal nocindent noautoindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType scheme setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4 colorcolumn=80
autocmd FileType haskell setlocal expandtab shiftwidth=4 softtabstop=4 colorcolumn=80
autocmd FileType tex setlocal textwidth=76 expandtab shiftwidth=4 tabstop=4 softtabstop=4 noautoindent nocopyindent colorcolumn=80
autocmd FileType rust setlocal tabstop=4 shiftwidth=4 colorcolumn=80
autocmd FileType erlang setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType java setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4 colorcolumn=80
autocmd FileType html setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType ejs setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType javascript setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80
autocmd FileType swift setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80 
autocmd FileType pov setlocal cindent expandtab shiftwidth=2 tabstop=2 softtabstop=2 colorcolumn=80

"Set leader.
let mapleader = ","
nnoremap <leader>. :Tags<cr>
nnoremap <leader>p :FZF<cr>

"Fix inconsistencies.
noremap Y y$

"Copy to clipboard (local).
nnoremap <leader>y :call system('pbcopy', @0)<CR>
"Copy to clipboard (remote).
" nnoremap <leader>y :call system('nc localhost 8377', @0)<CR>

"Save a keystroke when entering command mode.
noremap ; :
noremap : ;

"Make the default vertical navigation keys do something sane.
noremap j gj
noremap k gk

"Write changes to protected read-only files.
cmap w!! %!sudo tee > /dev/null %

"Get the directory containing the current file.
cmap cf %:p:h

"Keep search term at the center of the screen.
nnoremap <silent> N Nzz
nnoremap <silent> n nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz
nnoremap <silent> g# g#zz

"Ctrl-C clears the screen of highlights.
map <C-c> ;noh<CR>

"Drag lines.
map <C-j> ;m+<CR>
map <C-k> ;m-2<CR>

"Clang format.
map <C-g> ;pyf /Users/vsk/src/llvm-project-master/clang/tools/clang-format/clang-format.py<cr>
imap <C-g> <c-o>;pyf /Users/vsk/src/llvm-project-master/clang/tools/clang-format/clang-format.py<cr>

"Window resizing.
if bufwinnr(1)
    map + <C-W>+
    map - <C-W>-
endif

"Recursively search upwards for a tagfile.
set tags+=./tags;/

"Open the current tag in a new tab, or a vertical split.
map <C-\> ;tab split<CR>;exec("tag ".expand("<cword>"))<CR>

"Manage tabs with ease.
map tm ;tabmove<Space>
map tn ;tabnew<CR>
map <c-h> ;tabprev<CR>
imap <c-h> <ESC>;tabprev<CR>
map <c-l> ;tabnext<CR>
imap <c-l> <ESC>;tabnext<CR>

"Manage region folding.
set foldmethod=manual
set foldlevelstart=50
inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf

"Resize splits when the window is resized.
autocmd VimResized * exe "normal! \<c-w>="

"Bold highlighting for vim error messages. 
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

"Change this on unreliable machines.
set nobackup
set noswapfile

"Set up building with ninja.
set makeprg=ninja
