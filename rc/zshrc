PROMPT="================================================================================
[%M] %10c (%?) $ "

setopt completealiases
setopt append_history
setopt share_history
setopt histignorealldups
setopt nobeep
setopt interactivecomments

zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-:=]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' max-errors 5 numeric
zstyle ':completion:*' menu select
zstyle :compinstall filename '/home/vk/.zshrc'

autoload -Uz compinit
compinit
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=1000000
setopt appendhistory autocd extendedglob
bindkey -v

autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line

bindkey '\e[3~' delete-char
bindkey '^R' history-incremental-search-backward

# Spelling mistaeks happen.
alias v='vim -p'
alias c='vim -p'
alias nin='ninja'
alias ninha='ninja'
alias l='ls'
alias sl='ls'

# Git.
alias g='git'
alias gst='git status'
alias gco='git checkout'
alias gcp='git cherry-pick'
alias squash='git rebase -i HEAD~2'
alias gg='git grep'

# Grab the first column of the input, using ":" as the column separator.
alias fst='cut -d":" -f1 | uniq | grep -vE "\.pyc$|Binary "'

# Edit files matching a git-grep search.
edit() { v $(gg $* | fst) }

# Edit files with a name matching the pattern $1 (case-insensitively).
editf() { v $(find . -iname "$1") }

# Move to the directory containing the first file matching $1 (case-insensitively).
cdf() { cd $(find . -iname "$1" -type f -exec dirname {} \; | head -n1) }

# Move to the first directory matching $1 (case-insensitively).
cdd() { cd $(find . -iname "$1" -type d | head -n1) }

# Move to the build directory corresponding to the current source directory.
cdb() {
  src_dir=$(pwd | grep -Eo "$HOME/src/[^/]+")
  src_label=$(basename $src_dir)
  build_dir="$HOME/src/builds/$src_label-$1"
  cd $build_dir
}

# Return the source directory corresponding to the current build directory.
# Optionally drill down into a source subdirectory specified in $1.
srcs() {
  build_dir=$(pwd | grep -Eo "$HOME/src/builds/[^/]+")
  src_label=$(basename $build_dir | sed -E 's/-(R|D)A//g' | sed 's/-stage2//g')
  src_dir="$HOME/src/$src_label"
  if [ -d $src_dir/llvm ]; then
    src_dir=$src_dir/llvm
  fi
  echo "$src_dir/$1"
}

# Move to the source directory corresponding to the current build directory.
cds() { cd $(srcs $*) }

# Apple buildit.
alias rcbuild='~rc/bin/buildit'

# Handling remote sessions.
alias ssh="caffeinate ssh"
alias tmux="caffeinate tmux -2"
alias clip="nc localhost 8377"
alias agent='eval $(keychain --eval --agents ssh -Q --quiet id_rsa)'

# System settings.

# ulimit -c unlimited

export EDITOR=vim
export EMAIL=vsk@apple.com
export REPLYTO=$EMAIL

export PATH=~/scripts:$PATH
export PATH=~/int_zorg/tests/clang_qa/utils/:$PATH
